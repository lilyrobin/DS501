#histogram of all ratings:
data['rating'].hist(bins=5);
plt.xlabel('Rating')
plt.ylabel('Count')

#histogram of number of ratings each received
data.title.value_counts().hist(bins=40);
plt.xlabel('Total Ratings')
plt.ylabel('Count')

#same as above but want a clearer picture, so restrict

#hist of average ratings
mean_ratings.hist(bins=20);
plt.xlabel('Average Rating')
plt.ylabel('Count')

#hist of average rating for movies rated over 100 times
ratings_by_title = data.groupby('title').size()
dat100 = ratings_by_title.index[ratings_by_title >= 100]
mean_ratings[dat100].hist(bins=20)
plt.xlabel('Average Rating, Movies Rated 100+ times')
plt.ylabel('Count')

#tails go away, we would trust these ratings more (bigger sample size)

#* Make some conjectures about the distribution of ratings? Support your answers with data!  
#*  For example, what age range do you think has more extreme ratings?  Do you think children are more or less likely to rate a movie 1 or 5?
#*  Be sure to come up with your own conjectures and support them with data!

#look at age, gender specific histograms 

#histogram of each age range ratings-need to repeat for all ranges
kids=data[(data.age<=9)]
kids['rating'].hist(bins=5);

teens=data[(data.age>=10)&(data.age<=19)]
teens['rating'].hist(bins=5);

#variance within each gender, age range

#gender-basically the same
rating_std_by_gender = data.groupby('gender')['rating'].std()
#print rating_std_by_gender

#by age
#conjecture: ratings stabalize as groups age. Movies are so gender oriented for kids (princesses vs gi joe types) but as they age, 
#movies are made the please the whole audience. yes there are still action films vs chick flicks, but in general, the movies 
#the everyone sees, like big dramas, are meant to appeal to everyone. So we'd expect less variance as the age groups get older

labels = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79']

dat=data
dat['age_group'] = pd.cut(dat.age, range(0, 81, 10), right=False, labels=labels)
#print dat[['age', 'age_group']].drop_duplicates()[:10]

#age group-more variance in kids, standard deviation gets smaller as older
rating_std_by_age = data.groupby('age_group')['rating'].std()
print rating_std_by_age
