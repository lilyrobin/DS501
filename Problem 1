import pandas as pd

#-------------------------------
# Your code goes here.
# Add as many cells as you need
#-------------------------------
# build a Dataframe of users'information and display it in table format
unames = ['user_id', 'gender', 'age', 'occupation', 'zip'] 
users = pd.read_table('/Users/Stefan/Downloads/ml-1m/users.dat', sep='::', header=None,names=unames)

#create a Dataframe of ratings'information and display it in table format
rnames = ['user_id', 'movie_id', 'rating', 'timestamp']
ratings = pd.read_table('/Users/Stefan/Downloads/ml-1m/ratings.dat', sep='::', header=None,names=rnames)

#create a Dataframe of movies'information and display it in table format
mnames = ['movie_id', 'title', 'genres']
movies = pd.read_table('/Users/Stefan/Downloads/ml-1m/movies.dat', sep='::', header=None,names=mnames)

#merge those 3 tables into one complete table
data= pd.merge(pd.merge(ratings,users),movies)

#How many movies have an average rating over 4.5 overall?
mean_ratings =data.pivot_table('rating',rows='title',aggfunc='mean')
for i in range(3706):
    if(mean_ratings[i]>4.5):
        print mean_ratings.index[i]+' '+str(mean_ratings[i])

#How many movies have an average rating over 4.5 among men?
mean_rating =data.pivot_table('rating',rows='title',cols='gender',aggfunc='mean')
print mean_rating
for i in range(3706):
    if(mean_rating['M'][i]>4.5):
        print mean_rating.index[i]+' '+str(mean_rating['M'][i])
        
#How many movies have an average rating over 4.5 among women?      
for i in range(3706):
    if(mean_rating['F'][i]>4.5):
        print mean_rating.index[i]+' '+str(mean_rating['F'][i])
        
#How many movies have an median rating over 4.5 among men over age 30?
men_data=data[(data.gender=='M')&(data.age>=30)]
men =data.pivot_table('rating',rows='title',aggfunc='median')
for i in range(3706):
    if(men[i]>=4.5):
        print men.index[i]+' '+str(men[i])
        
#How many movies have an median rating over 4.5 among women over age 30?
women_data=data[(data.gender=='F')&(data.age>=30)]
women =data.pivot_table('rating',rows='title',aggfunc='median')
for i in range(3706):
    if(women[i]>=4.5):
        print women.index[i]+' '+str(women[i])
        
#What are ten most popular movies? we gonna count the number of rating by users because the more rating times there are,
#the more concentration the movie has which can serve to prove this movie is very popular
print "\n most rated:"
ratings_by_title = data.groupby('title').size()
ratings_by_title.sort(ascending=False)
#print ratings_by_title[:10]

#these are the movies with the highest number of ratings. but are they rated high? let's say among the top 100 movies by rating, the most popular are the 10 with the highest average rating

most_rated2 = ratings_by_title.head(n=100)
most_rated2 = most_rated2.index
high_pop=mean_ratings[most_rated2]
high_pop.sort(ascending=False)
print high_pop[:10]

#conjecture: look at most popular genres among different age groups 

#most popular genre
e=data.groupby('genres').size()
e.sort(ascending=False)
print e
#most rated is comedy

#Conjectures: which is the most common movie style among middle aged people(40-60)? I guess Drama
print "\n most popular genre among middle aged:"
middle_age_data=data[(data.age>=40)&(data.age<=60)]
a=middle_age_data.groupby('genres').size()
a.sort(ascending=False)
print a[:10]
#yes, drama. 

#kids
print "\n most common genre among kids:"
kids=data[(data.age<=12)]
f=kids.groupby('genres').size()
f.sort(ascending=False)
print f[:10]

#teens
print "\n most common genre among teens:"
teens=data[(data.age>=13)&(data.age<=19)]
b=teens.groupby('genres').size()
b.sort(ascending=False)
print b[:10]

#younger adults
print "\n most common genre among adults:"
adults=data[(data.age>=20)&(data.age<=39)]
c=middle_age_data.groupby('genres').size()
c.sort(ascending=False)
print c[:10]

#older adults
print "\n most common genre among elderly:"
old=data[(data.age>=61)]
g=old.groupby('genres').size()
g.sort(ascending=False)
print g[:10]

